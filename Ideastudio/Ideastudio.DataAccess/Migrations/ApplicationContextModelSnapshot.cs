// <auto-generated />
using System;
using Ideastudio.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ideastudio.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ideastudio.Domain.GlavniProjektant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrojLicence")
                        .HasColumnType("bigint");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Zvanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("GlavniProjektant");
                });

            modelBuilder.Entity("Ideastudio.Domain.IdejnoResenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzrade")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlavniProjektantId")
                        .HasColumnType("int");

                    b.Property<int>("LokacijskaDozvolaId")
                        .HasColumnType("int");

                    b.Property<int>("ObjekatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GlavniProjektantId");

                    b.HasIndex("LokacijskaDozvolaId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("IdejnoResenje");
                });

            modelBuilder.Entity("Ideastudio.Domain.InformacijeOLokaciji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("NamenaZemljista")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("InformacijeOLokaciji");
                });

            modelBuilder.Entity("Ideastudio.Domain.LokacijskaDozvola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrojParcele")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("InformacijeOLokacijiId")
                        .HasColumnType("int");

                    b.Property<string>("NazivObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("PovrsinaParcele")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InformacijeOLokacijiId");

                    b.ToTable("LokacijskaDozvola");
                });

            modelBuilder.Entity("Ideastudio.Domain.Objekat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrojParcele")
                        .HasColumnType("bigint");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Objekat");
                });

            modelBuilder.Entity("Ideastudio.Domain.Povrsina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Oznaka")
                        .HasColumnType("int");

                    b.Property<int>("ProjekatZaGradjevinskuDozvoluId")
                        .HasColumnType("int");

                    b.Property<string>("VrstaPoda")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("VrstaPovrsineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjekatZaGradjevinskuDozvoluId");

                    b.HasIndex("VrstaPovrsineId");

                    b.ToTable("Povrsina");
                });

            modelBuilder.Entity("Ideastudio.Domain.ProjekatZaGradjevinskuDozvolu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzrade")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdejnoResenjeId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdejnoResenjeId");

                    b.ToTable("ProjekatZaGradjevinskuDozvolu");
                });

            modelBuilder.Entity("Ideastudio.Domain.Prostorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("VrstaPovrsineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VrstaPovrsineId");

                    b.ToTable("Prostorija");
                });

            modelBuilder.Entity("Ideastudio.Domain.VrstaPovrsine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("VrstaPovrsine");
                });

            modelBuilder.Entity("Ideastudio.Domain.IdejnoResenje", b =>
                {
                    b.HasOne("Ideastudio.Domain.GlavniProjektant", "GlavniProjektant")
                        .WithMany("IdejnaResenja")
                        .HasForeignKey("GlavniProjektantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ideastudio.Domain.LokacijskaDozvola", "LokacijskaDozvola")
                        .WithMany("IdejnaResenja")
                        .HasForeignKey("LokacijskaDozvolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ideastudio.Domain.Objekat", "Objekat")
                        .WithMany("IdejnaResenja")
                        .HasForeignKey("ObjekatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ideastudio.Domain.LokacijskaDozvola", b =>
                {
                    b.HasOne("Ideastudio.Domain.InformacijeOLokaciji", "InformacijeOLokaciji")
                        .WithMany("LokacijskeDozvole")
                        .HasForeignKey("InformacijeOLokacijiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ideastudio.Domain.Povrsina", b =>
                {
                    b.HasOne("Ideastudio.Domain.ProjekatZaGradjevinskuDozvolu", "ProjekatZaGradjevinskuDozvolu")
                        .WithMany("Povrsine")
                        .HasForeignKey("ProjekatZaGradjevinskuDozvoluId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ideastudio.Domain.VrstaPovrsine", "VrstaPovrsine")
                        .WithMany("Povrsine")
                        .HasForeignKey("VrstaPovrsineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ideastudio.Domain.ProjekatZaGradjevinskuDozvolu", b =>
                {
                    b.HasOne("Ideastudio.Domain.IdejnoResenje", "IdejnoResenje")
                        .WithMany("ProjektiZaGradjevinskuDozvolu")
                        .HasForeignKey("IdejnoResenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ideastudio.Domain.Prostorija", b =>
                {
                    b.HasOne("Ideastudio.Domain.VrstaPovrsine", "VrstaPovrsine")
                        .WithMany("Prostorije")
                        .HasForeignKey("VrstaPovrsineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
